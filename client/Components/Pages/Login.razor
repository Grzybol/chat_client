@page "/login"
@rendermode InteractiveServer
@using Services
@inject NavigationManager NavigationManager 
@inject YourUserNamespace.User user
@using ClientCommunication
@using System.Text.Json
@using ChatMessageNamespace


<div class="login-container">
    <h1>Logowanie</h1>
    

    <form class="pure-form" @onsubmit="HandleLogin" @onsubmit:preventDefault> 
        <input @bind="LoginInput" type="text" placeholder="Nazwa użytkownika" required />
        <input @bind="PasswordInput" type="password" placeholder="Hasło" required />
        <button type="submit"><i class="fa fa-chevron-circle-right"></i> Zaloguj</button>
    </form>

    @if (!string.IsNullOrEmpty(Message))
    {
        <p class="login-message @(IsError ? "error" : "success")">@Message</p>
    }

</div>

@code {
    private string LoginInput { get; set; } = ""; 
    private string PasswordInput { get; set; } = ""; 
    private string Message { get; set; } = ""; 
    private bool IsError { get; set; } 

    private async Task HandleLogin() 
    {
        Message = ""; 
        IsError = false;
        
        Console.WriteLine($"Próba logowania: Login: {LoginInput}, Password: {PasswordInput}");

        if (string.IsNullOrWhiteSpace(LoginInput) || string.IsNullOrWhiteSpace(PasswordInput))
        {
            Message = "Podaj login i hasło.";
            IsError = true;
            return;
        }

        bool authSuccess = false;

        try
        {
            authSuccess = await ClientSocket.CheckAuthorizationToken(LoginInput, PasswordInput);
        }
        catch (Exception ex)
        {
            Message = $"Błąd połączenia: {ex.Message}";
            IsError = true;
            return;
        }

        if (authSuccess)
        {
            Console.WriteLine("redirect");
            Message = "Zalogowano poprawnie.";
            IsError = false;
            user.SetUserName(LoginInput);
            NavigationManager.NavigateTo("/chat");
        }
        else
        {
            Message = "Błędny login lub hasło.";
            IsError = true;
        }
    }
}
